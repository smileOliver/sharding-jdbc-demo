dataSources:
  ds0: !!com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/sharding-jdbc1?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: wk123456
  ds1: !!com.alibaba.druid.pool.dDruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/sharding-jdbc2?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: wk123456
shardingRule:
  tables:
    user:
      actualDataNodes: ds${0..1}.user${0..2}
      databaseStrategy:
        inline:
          shardingColumn: id
          algorithmExpression: ds_${id % 2}
      keyGenerator:
        column: id
        type: SNOWFLAKE
      tableStrategy:
        inline:
          algorithmExpression: user_${id % 3}
          shardingColumn: id

    t_order:
      actualDataNodes: ds_${0..1}.t_order_${0..3}
      databaseStrategy:
        inline:
          algorithmExpression: ds_${user_id % 2}
          shardingColumn: order_id
      keyGenerator:
        column: order_id
        type: SNOWFLAKE
      logicTable: t_order
      tableStrategy:
        inline:
          algorithmExpression: t_order_${order_id % 4}
          shardingColumn: order_id
    order_item:
      actualDataNodes: ds_${0..1}.order_item_${0..3}
      databaseStrategy:
        inline:
          algorithmExpression: ds_${user_id % 2}
          shardingColumn: user_id
      logicTable: order_item
      tableStrategy:
        inline:
          algorithmExpression: order_item_${order_id % 4}
          shardingColumn: order_id
  bindingTables:
    - user
    - order,order_item
  broadcastTables:
    - user_config
  defaultDataSourceName: ds0
  defaultKeyGenerator:
    type: SNOWFLAKE
    column: id
  defaultDatabaseStrategy:
    none:
  defaultTableStrategy:
    none:
props:
  sql.show: true
